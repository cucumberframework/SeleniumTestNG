<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="91616" started-at="2022-07-19T11:23:07 IST" finished-at="2022-07-19T11:24:39 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="91616" started-at="2022-07-19T11:23:07 IST" finished-at="2022-07-19T11:24:39 IST">
      <class name="TestCases.TC55">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestCases.TC55@b59d31]" name="beforeSuite" is-config="true" duration-ms="449" started-at="2022-07-19T11:23:07 IST" finished-at="2022-07-19T11:23:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestCases.TC55@b59d31]" name="beforeTest" is-config="true" duration-ms="0" started-at="2022-07-19T11:23:07 IST" finished-at="2022-07-19T11:23:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCases.TC55@b59d31]" name="beforeClass" is-config="true" duration-ms="1" started-at="2022-07-19T11:23:08 IST" finished-at="2022-07-19T11:23:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TC55@b59d31]" name="beforeMethod" is-config="true" duration-ms="5459" started-at="2022-07-19T11:23:08 IST" finished-at="2022-07-19T11:23:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC55.login(java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:TestCases.TC55@b59d31]" name="login" duration-ms="42355" started-at="2022-07-19T11:23:13 IST" data-provider="getTestData" finished-at="2022-07-19T11:23:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[rbrahulbarapatre@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ra9892338563@]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.TC55@b59d31]" name="afterMethod" is-config="true" duration-ms="1929" started-at="2022-07-19T11:24:02 IST" finished-at="2022-07-19T11:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TC55@b59d31]" name="beforeMethod" is-config="true" duration-ms="1972" started-at="2022-07-19T11:24:04 IST" finished-at="2022-07-19T11:24:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC55.login(java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login(java.lang.String, java.lang.String)[pri:0, instance:TestCases.TC55@b59d31]" name="login" duration-ms="26847" started-at="2022-07-19T11:24:06 IST" data-provider="getTestData" finished-at="2022-07-19T11:24:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test@9892]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PasswordTest123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<false> but was:<true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<false> but was:<true>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:147)
at TestCases.TC55.login(TC55.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.TC55@b59d31]" name="afterMethod" is-config="true" duration-ms="4586" started-at="2022-07-19T11:24:34 IST" finished-at="2022-07-19T11:24:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:TestCases.TC55@b59d31]" name="afterClass" is-config="true" duration-ms="3" started-at="2022-07-19T11:24:39 IST" finished-at="2022-07-19T11:24:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestCases.TC55@b59d31]" name="afterTest" is-config="true" duration-ms="1" started-at="2022-07-19T11:24:39 IST" finished-at="2022-07-19T11:24:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestCases.TC55@b59d31]" name="afterSuite" is-config="true" duration-ms="2640" started-at="2022-07-19T11:24:40 IST" finished-at="2022-07-19T11:24:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.TC55 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
